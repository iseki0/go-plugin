package space.iseki.goplugin;

public class GoTargets {
    public static final GoTarget AIX_PPC64 = new GoTarget("aix", "ppc64");
    public static final GoTarget ANDROID_386 = new GoTarget("android", "386");
    public static final GoTarget ANDROID_AMD64 = new GoTarget("android", "amd64");
    public static final GoTarget ANDROID_ARM = new GoTarget("android", "arm");
    public static final GoTarget ANDROID_ARM64 = new GoTarget("android", "arm64");
    public static final GoTarget DARWIN_AMD64 = new GoTarget("darwin", "amd64");
    public static final GoTarget DARWIN_ARM64 = new GoTarget("darwin", "arm64");
    public static final GoTarget DRAGONFLY_AMD64 = new GoTarget("dragonfly", "amd64");
    public static final GoTarget FREEBSD_386 = new GoTarget("freebsd", "386");
    public static final GoTarget FREEBSD_AMD64 = new GoTarget("freebsd", "amd64");
    public static final GoTarget FREEBSD_ARM = new GoTarget("freebsd", "arm");
    public static final GoTarget FREEBSD_ARM64 = new GoTarget("freebsd", "arm64");
    public static final GoTarget FREEBSD_RISCV64 = new GoTarget("freebsd", "riscv64");
    public static final GoTarget ILLUMOS_AMD64 = new GoTarget("illumos", "amd64");
    public static final GoTarget IOS_AMD64 = new GoTarget("ios", "amd64");
    public static final GoTarget IOS_ARM64 = new GoTarget("ios", "arm64");
    public static final GoTarget JS_WASM = new GoTarget("js", "wasm");
    public static final GoTarget LINUX_386 = new GoTarget("linux", "386");
    public static final GoTarget LINUX_AMD64 = new GoTarget("linux", "amd64");
    public static final GoTarget LINUX_ARM = new GoTarget("linux", "arm");
    public static final GoTarget LINUX_ARM64 = new GoTarget("linux", "arm64");
    public static final GoTarget LINUX_LOONG64 = new GoTarget("linux", "loong64");
    public static final GoTarget LINUX_MIPS = new GoTarget("linux", "mips");
    public static final GoTarget LINUX_MIPS64 = new GoTarget("linux", "mips64");
    public static final GoTarget LINUX_MIPS64LE = new GoTarget("linux", "mips64le");
    public static final GoTarget LINUX_MIPSLE = new GoTarget("linux", "mipsle");
    public static final GoTarget LINUX_PPC64 = new GoTarget("linux", "ppc64");
    public static final GoTarget LINUX_PPC64LE = new GoTarget("linux", "ppc64le");
    public static final GoTarget LINUX_RISCV64 = new GoTarget("linux", "riscv64");
    public static final GoTarget LINUX_S390X = new GoTarget("linux", "s390x");
    public static final GoTarget LINUX_SPARC64 = new GoTarget("linux", "sparc64");
    public static final GoTarget NETBSD_386 = new GoTarget("netbsd", "386");
    public static final GoTarget NETBSD_AMD64 = new GoTarget("netbsd", "amd64");
    public static final GoTarget NETBSD_ARM = new GoTarget("netbsd", "arm");
    public static final GoTarget NETBSD_ARM64 = new GoTarget("netbsd", "arm64");
    public static final GoTarget OPENBSD_386 = new GoTarget("openbsd", "386");
    public static final GoTarget OPENBSD_AMD64 = new GoTarget("openbsd", "amd64");
    public static final GoTarget OPENBSD_ARM = new GoTarget("openbsd", "arm");
    public static final GoTarget OPENBSD_ARM64 = new GoTarget("openbsd", "arm64");
    public static final GoTarget OPENBSD_MIPS64 = new GoTarget("openbsd", "mips64");
    public static final GoTarget OPENBSD_PPC64 = new GoTarget("openbsd", "ppc64");
    public static final GoTarget OPENBSD_RISCV64 = new GoTarget("openbsd", "riscv64");
    public static final GoTarget PLAN9_386 = new GoTarget("plan9", "386");
    public static final GoTarget PLAN9_AMD64 = new GoTarget("plan9", "amd64");
    public static final GoTarget PLAN9_ARM = new GoTarget("plan9", "arm");
    public static final GoTarget SOLARIS_AMD64 = new GoTarget("solaris", "amd64");
    public static final GoTarget WASIP1_WASM = new GoTarget("wasip1", "wasm");
    public static final GoTarget WINDOWS_386 = new GoTarget("windows", "386");
    public static final GoTarget WINDOWS_AMD64 = new GoTarget("windows", "amd64");
    public static final GoTarget WINDOWS_ARM = new GoTarget("windows", "arm");
    public static final GoTarget WINDOWS_ARM64 = new GoTarget("windows", "arm64");
}
